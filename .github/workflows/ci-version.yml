name: CI-version

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        toolchain:
          - stable
          - nightly
        features:
          -
    name: Test ${{ matrix.toolchain }} on ${{ matrix.os }} (${{ matrix.features }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install OpenCC
        run: |
          sudo apt update
          sudo apt install doxygen cmake wget
          wget https://github.com/BYVoid/OpenCC/archive/refs/tags/ver.1.1.9.tar.gz
          tar xf ver.1.1.9.tar.gz
          cd OpenCC-*
          make -j$(nproc) PREFIX=/usr
          sudo make PREFIX=/usr install
      - run: sudo ldconfig
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: cargo test --release ${{ matrix.features }}
      - run: cargo doc --release ${{ matrix.features }}

  MSRV:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        toolchain:
          - "1.70"
        features:
          -
    name: Test ${{ matrix.toolchain }} on ${{ matrix.os }} (${{ matrix.features }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install OpenCC
        run: |
          sudo apt update
          sudo apt install doxygen cmake wget
          wget https://github.com/BYVoid/OpenCC/archive/refs/tags/ver.1.1.9.tar.gz
          tar xf ver.1.1.9.tar.gz
          cd OpenCC-*
          make -j$(nproc) PREFIX=/usr
          sudo make PREFIX=/usr install
      - run: sudo ldconfig
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
      - run: cargo test --release --lib --bins ${{ matrix.features }}